Given a string S, find and return all the possible permutations of the input string.
Note 1 : The order of permutations is not important.
Note 2 : If original string contains duplicate characters, permutations will also be duplicates.
Input Format :

String S

Output Format :

All permutations (in different lines)

Sample Input :

abc

Sample Output :

abc
acb
bac
bca
cab
cba

public class solution {
	public static String[] permutationOfString(String input){
	      if (input.length() == 0) {
          String[] ans = { "" };
          return ans;
      }

      char c = input.charAt(0);
      String[] smallans = permutationOfString(input.substring(1));
      String[] ans = new String[smallans.length*input.length()];
      
      int k = 0;
      for (int j = 0; j < smallans.length; j++) {
          String cs = smallans[j];
          for (int i = 0; i <=cs.length(); i++) {
              ans[k] = cs.substring(0,i)+c+cs.substring(i);
              k++;
            }
      }
      return ans;
	}


	
}
